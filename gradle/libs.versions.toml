[versions]
android-gradle-plugin = "8.1.1"
kotlin = "1.8.0"
kotlin-jvm = "1.8.0"
# AndroidX
coreKtx = "1.10.1"
appCompat = "1.6.1"
contraintLayout = "2.1.4"
cardView = "1.0.0"
activityKtx = "1.7.2"
fragmentKtx = "1.6.0"
recyclerView = "1.3.0"
lifecycle = "2.6.2"
datastore = "1.0.0"
startup = "1.1.1"
# Google
material = "1.8.0"
hilt = "2.46.1"
dagger = "2.46.1"
locationService = "21.0.1"
# SquareUp
retrofit = "2.9.0"
okhttp = "4.11.0"
leakCanary = "2.12"
# Async
coroutines = "1.7.1"
# Compose
compose_bom = "2023.03.00"
# Navigation
cicerone = "7.1"
# Image
glide = "4.15.1"
# Additional
shimmer = "0.5.0"
timber = "5.0.1"
circleImage = "3.1.0"

[libraries]
# AndroidX
androidx-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "contraintLayout" }
cardView = { module = "androidx.cardview:cardview", version.ref = "cardView" }
activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activityKtx" }
fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
recyclerView = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerView" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
startup = { module = "androidx.startup:startup-runtime", version.ref = "startup" }
# Google
material = { module = "com.google.android.material:material", version.ref = "material" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
locationService = { module = "com.google.android.gms:play-services-location", version.ref = "locationService" }
# SquareUp
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
gsonConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }
# Async
coroutine-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose_bom" }
compose-ui = { module = "androidx.compose.ui:ui" }
#compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-graphics = { module = "androidx.compose.ui:ui-graphics" }
compose-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-material = { module = "androidx.compose.material3:material3" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling" }
# Navigation
cicerone = { module = "com.github.terrakok:cicerone", version.ref = "cicerone" }
# Image
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
# Additional
shimmer = { module = "com.facebook.shimmer:shimmer", version.ref = "shimmer" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
circleImageView = { module = "de.hdodenhof:circleimageview", version.ref = "circleImage" }
# Dependencies of the included build-logic
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "android-gradle-plugin" }

[plugins]
android-app = { id = "com.android.application", version.ref = "android-gradle-plugin" }
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-jvm" }

[bundles]
compose = [
    "compose-ui",
    "compose-graphics",
    "compose-preview",
    "compose-material",
    "compose-tooling"
]


